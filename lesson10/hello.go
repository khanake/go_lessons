// 配列のメモリ効率は悪い
// 要素は固定になるため、足すことはできない

//スライスという配列を便利にしたものが存在する

package main

import (
  "fmt"
)

func main() {
  a := [...]int{1,2,3,4,5,6,7,8,9}
  s := a[2:4] //aの２から４を取りだす
  //s := a[2:] //aの２から最後まで
  //s := a[:4] //4まで
  //s := a[:] //はじめから終わりまで
  s[0] = 99 //スライスも配列も変わることに注意
  fmt.Println(a)
  fmt.Println(s)
  fmt.Println(len(s)) //要素数を調べる
  fmt.Println(cap(s)) //取り出し可能な最大個数、この例だと7がでる
}
